#!/usr/local/bin/python

#
# Copyright (C) 2013 kenakoa. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import argparse
import os.path
import biplist

class IOSSimulatorPreferences():

    __preferences_directory = None

    def __init__(self, sdk):
        self.__preferences_directory = '%s/Library/Application Support/iPhone Simulator/%s/Library/Preferences/' % (os.path.expanduser('~'), sdk)

    def __get_preference_path(self, filename):
        return self.__preferences_directory + filename

    def __get_preference(self, preference_path):
        return biplist.readPlist(preference_path)

    def __set(self, filename, key, value):
        preference_path = self.__get_preference_path(filename)
        preference = self.__get_preference(preference_path)
        preference[key] = value
        biplist.writePlist(preference, preference_path)

    def __get(self, filename, key):
        preference_path = self.__get_preference_path(filename)
        preference = self.__get_preference(preference_path)
        return preference[key]

    def set_highest_priority_language(self, language):
        if (not language):
            return
        filename = '.GlobalPreferences.plist'
        key = 'AppleLanguages'
        languages = self.__get(filename,key)
        if (not language in languages):
            print 'wrong language: %s' % language
            return
        languages.remove(language)
        languages.insert(0, language)
        self.__set(filename,key,languages)
        print 'set highest priority language: %s' % language

arg_parser = argparse.ArgumentParser(description='command line interface for iPhone simulator preferences')
arg_parser.add_argument('--sdk',
                        required=True,
                        help='sdk version',
                        dest='sdk')
arg_parser.add_argument('--language',
                        help='highest priority language')
args = arg_parser.parse_args()
ios_simulator_preferences = IOSSimulatorPreferences(args.sdk)
ios_simulator_preferences.set_highest_priority_language(args.language)

